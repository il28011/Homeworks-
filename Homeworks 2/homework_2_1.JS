'number' + 23 + 32
// 'number23' + 32
// 'number2332'
// Тільки з оператором + ми можемо співпрацювати з рядками та числами, тобто додаючи один до одного.
41 + 1 + 'number'
// 42 + 'number'
// '42number'
// Теж саме правило
null + 1
// 1
// Бо null перетворюється в число 0;
'five' + + 'two'
// NaN
// Тому що оператор ++ використовується тільки з числами
// Якщо в рядку знаходяться тільки числа, то вони перейдуть в числове значення. Якщо в ньому знаходться числа та букви або окремо тільки букви, то ми отримуємо NaN. Якщо рядок пустий, то ми отримуємо 0.
2 && 7
// 7
// Тому що оператор && постійно шукає значення False та якщо не знаходить, то видає останнє значення True
+'40' + +'2';
// Перетворюємо +'40' на  число 40
// Перетворюємо +'2' на число 2
// Число 40 та число 2 ми додаємо і в нас виходить 42
'10' - 5 === 6;
// Перетворюємо '10' в число 10
// Віднімаємо, отримуємо 5
// Строге порівння з числом 6 і отримуємо false
true + false
// True = 1   False = 0
// 1 + 0 = 1
'4px' - 3
// NaN
// Синтаксично ми можемо віднімати від рядка число, просто рядок перетворюється на числове значення. Яке саме? Відповідь: 4
'4' - 3
// 1
// Так як рядок з лише цифрами перетвориться на число
'2' + 3 ** 2;
// Зведення до ступеня є пріоритетнішим тому вираз вийде '2' + 9
// Так як '2' є рядком, а не числом, то ми додаємо 9 до рядка і матимемо рядок '29'
12 / '6'
// Рядок '6' перетворюється на число 6
// 12 / 6 = 2
23 + 42 + 'number'
// 23 + 42 = 65
// '65number' по правилу додавання рядка до текста
'10' + (5 === 6);
// Проритет (5 === 6) дасть нам false
// false = 0
// Булеве значення false автоматично перетвориться на рядок 'false'
// '10false' додавання рядка до рядка
'number' + 15 + 3
// 'number15' додавання рядка до числа
// 'number153' додавання рядка до числа